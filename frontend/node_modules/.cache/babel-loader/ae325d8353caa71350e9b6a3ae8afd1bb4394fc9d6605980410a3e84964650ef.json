{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: '/api',\n  withCredentials: true\n});\nexport const userService = {\n  login: async (username, password) => {\n    const response = await api.post('/users/login', {\n      username,\n      password\n    });\n    return response.data;\n  },\n  register: async (username, password) => {\n    const response = await api.post('/users/register', {\n      username,\n      password\n    });\n    return response.data;\n  },\n  logout: async () => {\n    const response = await api.post('/users/logout');\n    return response.data;\n  },\n  getProfile: async username => {\n    const response = await api.get(`/users/${username}`);\n    return response.data;\n  },\n  updateDescription: async description => {\n    const response = await api.put('/users/description', {\n      description\n    });\n    return response.data;\n  }\n};\nexport const postService = {\n  getAllPosts: async () => {\n    const response = await api.get('/posts');\n    return response.data;\n  },\n  getUserPosts: async username => {\n    const response = await api.get(`/posts/user/${username}`);\n    return response.data;\n  },\n  createPost: async (content, username) => {\n    const response = await api.post('/posts', {\n      content,\n      username\n    });\n    return response.data;\n  },\n  updatePost: async (postId, content) => {\n    const response = await api.put(`/posts/${postId}`, {\n      content\n    });\n    return response.data;\n  },\n  deletePost: async postId => {\n    const response = await api.delete(`/posts/${postId}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","userService","login","username","password","response","post","data","register","logout","getProfile","get","updateDescription","description","put","postService","getAllPosts","getUserPosts","createPost","content","updatePost","postId","deletePost","delete"],"sources":["/Users/baibai/social-media-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: '/api',\n  withCredentials: true\n});\n\nexport const userService = {\n  login: async (username, password) => {\n    const response = await api.post('/users/login', { username, password });\n    return response.data;\n  },\n\n  register: async (username, password) => {\n    const response = await api.post('/users/register', { username, password });\n    return response.data;\n  },\n\n  logout: async () => {\n    const response = await api.post('/users/logout');\n    return response.data;\n  },\n\n  getProfile: async (username) => {\n    const response = await api.get(`/users/${username}`);\n    return response.data;\n  },\n\n  updateDescription: async (description) => {\n    const response = await api.put('/users/description', { description });\n    return response.data;\n  }\n};\n\nexport const postService = {\n  getAllPosts: async () => {\n    const response = await api.get('/posts');\n    return response.data;\n  },\n\n  getUserPosts: async (username) => {\n    const response = await api.get(`/posts/user/${username}`);\n    return response.data;\n  },\n\n  createPost: async (content, username) => {\n    const response = await api.post('/posts', { content, username });\n    return response.data;\n  },\n\n  updatePost: async (postId, content) => {\n    const response = await api.put(`/posts/${postId}`, { content });\n    return response.data;\n  },\n\n  deletePost: async (postId) => {\n    const response = await api.delete(`/posts/${postId}`);\n    return response.data;\n  }\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,MAAM;EACfC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,cAAc,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACvE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,QAAQ,EAAE,MAAAA,CAAOL,QAAQ,EAAEC,QAAQ,KAAK;IACtC,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,iBAAiB,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC1E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDE,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAMJ,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,eAAe,CAAC;IAChD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDG,UAAU,EAAE,MAAOP,QAAQ,IAAK;IAC9B,MAAME,QAAQ,GAAG,MAAMR,GAAG,CAACc,GAAG,CAAC,UAAUR,QAAQ,EAAE,CAAC;IACpD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDK,iBAAiB,EAAE,MAAOC,WAAW,IAAK;IACxC,MAAMR,QAAQ,GAAG,MAAMR,GAAG,CAACiB,GAAG,CAAC,oBAAoB,EAAE;MAAED;IAAY,CAAC,CAAC;IACrE,OAAOR,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMQ,WAAW,GAAG;EACzBC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMX,QAAQ,GAAG,MAAMR,GAAG,CAACc,GAAG,CAAC,QAAQ,CAAC;IACxC,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDU,YAAY,EAAE,MAAOd,QAAQ,IAAK;IAChC,MAAME,QAAQ,GAAG,MAAMR,GAAG,CAACc,GAAG,CAAC,eAAeR,QAAQ,EAAE,CAAC;IACzD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDW,UAAU,EAAE,MAAAA,CAAOC,OAAO,EAAEhB,QAAQ,KAAK;IACvC,MAAME,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,QAAQ,EAAE;MAAEa,OAAO;MAAEhB;IAAS,CAAC,CAAC;IAChE,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDa,UAAU,EAAE,MAAAA,CAAOC,MAAM,EAAEF,OAAO,KAAK;IACrC,MAAMd,QAAQ,GAAG,MAAMR,GAAG,CAACiB,GAAG,CAAC,UAAUO,MAAM,EAAE,EAAE;MAAEF;IAAQ,CAAC,CAAC;IAC/D,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDe,UAAU,EAAE,MAAOD,MAAM,IAAK;IAC5B,MAAMhB,QAAQ,GAAG,MAAMR,GAAG,CAAC0B,MAAM,CAAC,UAAUF,MAAM,EAAE,CAAC;IACrD,OAAOhB,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}